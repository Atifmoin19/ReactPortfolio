"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Composes a variable number of CSS helper functions.
 * Returns a function that accepts all the original arguments
 * of the functions it composed. If the original function
 * accepted multiple arguments, they must be passed as
 * an array.
 * @example
 * const translateXandRotateY = compose(translateX, rotateY);
 * const cssValue = translateXandRotateY('-5px', '30deg');
 */
exports.compose = function () {
    var funcs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        funcs[_i] = arguments[_i];
    }
    return function () {
        var styleArgs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            styleArgs[_i] = arguments[_i];
        }
        var result = funcs.reduce(function (acc, func, i) {
            var arg = styleArgs[i];
            return acc + " " + (Array.isArray(arg) ? func.apply(void 0, arg) : func(arg));
        }, '');
        return result.trim();
    };
};
function getNextPercentage(i, total, limit) {
    if (limit === void 0) { limit = 100; }
    if (i == 0) {
        return '0%';
    }
    return (i / total) * limit + '%';
}
exports.getNextPercentage = getNextPercentage;
exports.cubicBezier = function (a, b, c, d) { return "cubic-bezier(" + a + ", " + b + ", " + c + ", " + d + ")"; };
exports.translate3d = function (a, b, c) {
    return "translate3d(" + a + ", " + b + ", " + c + ")";
};
exports.translateX = function (a) { return "translateX(" + a + ")"; };
exports.scale3d = function (a, b, c) {
    return "scale3d(" + a + ", " + b + ", " + c + ")";
};
exports.scale = function (a) { return "scale(" + a + ")"; };
exports.skewX = function (deg) { return "skewX(" + deg + "deg)"; };
exports.skewY = function (deg) { return "skewY(" + deg + "deg)"; };
exports.skewXY = function (x, y) {
    return exports.skewX(x) + " " + exports.skewY(y);
};
exports.rotateY = function (a) { return "rotateY(" + a + ")"; };
exports.rotate3d = function (a, b, c, d) {
    return "rotate3d(" + a + ", " + b + ", " + c + ", " + d + "deg)";
};
exports.perspective = function (a) { return "perspective(" + a + ")"; };
