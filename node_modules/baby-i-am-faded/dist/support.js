"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx jsx */
var react_1 = require("@emotion/react");
var react_2 = __importDefault(require("react"));
exports.cloneElement = function (element, props) {
    return react_1.jsx(element.type, __assign(__assign({ key: element.key, ref: element.ref }, element.props), props));
};
function useCombinedRefs() {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    var targetRef = react_2.default.useRef();
    react_2.default.useEffect(function () {
        refs.forEach(function (ref) {
            if (!ref)
                return;
            if (typeof ref === 'function') {
                ref(targetRef.current);
            }
            else {
                ref.current = targetRef.current;
            }
        });
    }, [refs]);
    return targetRef;
}
exports.useCombinedRefs = useCombinedRefs;
exports.fadeInUp = react_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    from {\n        opacity: 0;\n        transform: translate3d(0px, -20px, 0px);\n    }\n    to {\n        opacity: 1;\n        transform: 'none';\n    }\n"], ["\n    from {\n        opacity: 0;\n        transform: translate3d(0px, -20px, 0px);\n    }\n    to {\n        opacity: 1;\n        transform: 'none';\n    }\n"])));
var templateObject_1;
